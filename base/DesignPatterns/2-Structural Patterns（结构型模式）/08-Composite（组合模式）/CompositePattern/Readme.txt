定义

　　组合模式主要用来处理一类具有“容器特征”的对象——即它们在充当对象的同时，又可以作为容器包含其他多个对象。

组合模式参与者：

　　◊ Component

　　　　° 声明组合中对象的接口；

　　　　° 实现全部类中公共接口的默认行为；

　　　　° 声明访问和管理子类的接口；

　　　　° （可选择）定义接口提供在递归结构中访问父类。

　　◊ Leaf

　　　　° 表示在组合对象中叶子节点对象，没有子节点；

　　　　° 定义组合对象中的初始行为。

　　◊ Composite

　　　　° 定义Component子类的行为；

　　　　° 保存Component子类；

　　　　° 实现Component接口的子类关联操作。

　　◊ Client

　　　　° 通过Component接口组合多个对象。

组合模式应用分析

　　组合模式可以适用以下情形：

　　◊ 希望把对象表示成部分—整体层次结构；

　　◊ 希望用户忽略组合对象与单个对象的不同，用户将统一地使用组合结构中所有对象。

　　组合模式具有以下特点：

　　◊ 定义了包含基本对象和组合对象的类层次结构。基本对象可以被组合成更复杂的组合对象，而这个组合对象又可以被组合，不断的递归下去。客户代码中，任何用到基本对象的地方都可以使用组合对象；

　　◊ 简化客户代码。客户可以一致地使用组合结构和单个对象。这样用户就不必关心处理的是一个叶子节点还是一个组合组件，从而简化了客户代码；

　　◊ 使得新增类型的组件更加容易。新定义的Composite或Leaf子类自动地与已有的结构和客户代码一起协同工作，客户程序不需因新的Component类而改变。